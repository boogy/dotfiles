# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Import additional configuration files
#
# Imports are loaded in order, skipping all missing files, with the importing
# file being loaded last. If a field is already present in a previous import, it
# will be replaced.
#
# All imports must either be absolute paths starting with `/`, or paths relative
# to the user's home directory starting with `~/`.
#import:
#  - /path/to/alacritty.yml

env:
  TERM: xterm-256color

window:
  opacity: 0.97
  dimensions:
    columns: 320
    lines: 100
  # position:
  #   x: 0
  #   y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
   x: 4
   y: 1

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background and no title bar buttons
  decorations: buttonless
  # decorations: transparent
  #

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

  title: Alacritty
  dynamic_title: true

  scrolling:
    history: 100000
    multiplier: 3

# Display tabs using this many cells (changes require restart)
tabspaces: 4

font:
  normal:
    family: "Cousine Nerd Font"
    style: Regular

  bold:
    family: "Cousine Nerd Font"
    style: Bold

  italic:
    family: "Cousine Nerd Font"
    style: Italic

  size: 15

  offset:
    x: 0
    y: 0

  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`.
  use_thin_strokes: false

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

schemes:
  ## Colors (Monokai)
  monokai: &monokai
    cursor:
      text: "#000000"
      cursor: "#ffffff"
    primary:
      background: "#191919"
      foreground: "#d8dee9"
    normal:
      black: "#5D5B57"
      red: "#F92672"
      green: "#A6E22E"
      yellow: "#F4BF75"
      blue: "#66D9EF"
      magenta: "#AE81FF"
      cyan: "#2AA198"
      white: "#F9F8F5"
    bright:
      black: "#75715E"
      red: "#F92672"
      green: "#A6E22E"
      yellow: "#F4BF75"
      blue: "#66D9EF"
      magenta: "#AE81FF"
      cyan: "#2AA198"
      white: "#F9F9F5"

  ## Colors (Gruvbox dark)
  gruvbox-dark: &gruvbox-dark
    primary:
      background: '#1d2021'
      foreground: '#ebdbb2'
    normal:
      black:   '#282828'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#a89984'
    bright:
      black:   '#928374'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#ebdbb2'

colors: *monokai

selection:
  # This string contains all characters that are used as separators for
  # "semantic words" in Alacritty.
  # semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"
  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

#cursor:
  #style:
    # Cursor shape
    #
    # Values for `shape`:
    #   - ▇ Block
    #   - _ Underline
    #   - | Beam
    #shape: Block

    # Cursor blinking state
    #
    # Values for `blinking`:
    #   - Never: Prevent the cursor from ever blinking
    #   - Off: Disable blinking by default
    #   - On: Enable blinking by default
    #   - Always: Force the cursor to always blink
    #blinking: Off

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  #vi_mode_style: None

  # Cursor blinking interval in milliseconds.
  #blink_interval: 750

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  #thickness: 0.15

# Live config reload (changes require restart)
live_config_reload: true

shell:
  program: /bin/zsh
  args:
    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
# alt_send_esc: true

mouse:
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  hide_when_typing: true


key_bindings:
  # (macOS only)
  - { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"            }
  - { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory     }
  - { key: Key0,           mods: Command,                    action: ResetFontSize    }
  - { key: Key0,           mods: Command|Shift,              action: IncreaseFontSize }
  - { key: Minus,          mods: Command,                    action: DecreaseFontSize }
  - { key: Plus,           mods: Command,                    action: IncreaseFontSize }
  - { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize }
  - { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize }
  - { key: V,              mods: Command,                    action: Paste            }
  - { key: C,              mods: Command,                    action: Copy             }
  - { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection   }
  - { key: H,              mods: Command,                    action: Hide             }
  - { key: M,              mods: Command,                    action: Minimize         }
  - { key: Q,              mods: Command,                    action: Quit             }
  - { key: W,              mods: Command,                    action: Quit             }
  - { key: F,              mods: Command|Control,            action: ToggleFullscreen }
  - { key: F,              mods: Command, mode: ~Search,     action: SearchForward    }
  - { key: B,              mods: Command, mode: ~Search,     action: SearchBackward   }

  - { key: N,         mods: Command,          action: SpawnNewInstance  }
  - { key: Minus,     mods: Command,          action: DecreaseFontSize  }
  - { key: Key0,      mods: Command|Shift,    action: IncreaseFontSize  }
  - { key: 20,        mods: Alt,              chars: "#"                }
  - { key: 28,        mods: Alt,              chars: "{"                }
  - { key: 25,        mods: Alt,              chars: "}"                }
  - { key: 5,         mods: Alt,              chars: "@"                }
  - { key: 26,        mods: Alt|Shift,        chars: "\\"               }
  - { key: 26,        mods: Alt,              chars: "|"                }
  # - { key: 45,        mods: Alt,              chars: "~"                }
  - { key: 23,        mods: Alt,              chars: "["                }
  - { key: 22,        mods: Alt,              chars: "]"                }
  # command enter to toggle fullscreen
  - { key: 36,        mods: Command,          action: ToggleFullscreen  }
