$script_root = <<-SCRIPT
export DEBIAN_FRONTEND=noninteractive

apt-get -y install zsh zsh-common zsh-syntax-highlighting curl wget software-properties-common apt-transport-https gcc g++ make \
python3-dev python3-requests python3-cryptography python3-pip \
neovim python3-neovim golang

## setup nodejs
#sudo apt -y install dirmngr lsb-release ca-certificates
curl -sL https://deb.nodesource.com/setup_10.x | sudo bash
sudo apt -y install nodejs

## setup yarn for neovim
curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update && sudo apt -y install yarn

## add latest neovim ppa
sudo add-apt-repository ppa:neovim-ppa/stable
sudo apt update
sudo apt -y install neovim

apt-get autoremove -y
apt-get autoclean -y
SCRIPT

$script_vagrant = <<-SCRIPT
[ -d ~/dotfiles ] || git clone https://github.com/boogy/dotfiles ~/dotfiles

[ -f /vagrant/bash_local ] \
    && cp /vagrant/bash_local ~/.bash_local \
    && chmod +x ~/.bash_local

## this script will take too long to wait for
~/dotfiles/install.sh &>/dev/null &

(cd ~/.config/nvim/autoload/plugged/vim-hexokinase/ && make hexokinase) &>/dev/null
sudo chsh --shell /bin/zsh vagrant
SCRIPT

Vagrant.configure("2") do |config|
    config.vm.box = "boogy/ubuntu1804"
    config.vm.hostname = "ubuntu1804"
    config.vm.network "private_network", type: "dhcp"

    config.vm.provider "virtualbox" do |vm|
        vm.name = "ubuntu1804"
        vm.gui = false
        vm.customize ["modifyvm"     , :id      , "--memory"             , 2048            ]
        vm.customize ["modifyvm"     , :id      , "--cpus"               , 2               ]
        vm.customize ["modifyvm"     , :id      , "--vram"               , "32"            ]
        vm.customize ["modifyvm"     , :id      , "--nicpromisc2"        , "allow-all"     ]
        vm.customize ["modifyvm"     , :id      , "--clipboard"          , "bidirectional" ]
        vm.customize ["modifyvm"     , :id      , "--draganddrop"        , "bidirectional" ]
        vm.customize ["setextradata" , "global" , "GUI/SuppressMessages" , "all"           ]
    end

    ## run provisioning script as root
    config.vm.provision "shell", inline: $script_root   , privileged: true

    ## run provisioning script as vagrant
    config.vm.provision "shell", inline: $script_vagrant, privileged: false
    config.vm.synced_folder ENV['HOME'], "/home/vagrant/share/"

    ## copy our own ssh key
    config.vm.provision "file", source: "~/.ssh/id_ed25519.pub", destination: "~/.ssh/me.pub"
    config.vm.provision "shell", inline: <<-SHELL
      grep ssh-ed25519 /home/vagrant/.ssh/authorized_keys || \
      cat /home/vagrant/.ssh/me.pub >> /home/vagrant/.ssh/authorized_keys
    SHELL
end
